% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layers_conv.R
\name{layer_crystal_conv}
\alias{layer_crystal_conv}
\title{CrystalConv}
\usage{
layer_crystal_conv(
  object,
  channels,
  activation = NULL,
  use_bias = TRUE,
  kernel_initializer = "glorot_uniform",
  bias_initializer = "zeros",
  kernel_regularizer = NULL,
  bias_regularizer = NULL,
  activity_regularizer = NULL,
  kernel_constraint = NULL,
  bias_constraint = NULL,
  ...
)
}
\arguments{
\item{channels}{integer, number of output channels}

\item{activation}{activation function to use}

\item{use_bias}{bool, add a bias vector to the output}

\item{kernel_initializer}{initializer for the weights}

\item{bias_initializer}{initializer for the bias vector}

\item{kernel_regularizer}{regularization applied to the weights}

\item{bias_regularizer}{regularization applied to the bias vector}

\item{activity_regularizer}{regularization applied to the output}

\item{kernel_constraint}{constraint applied to the weights}

\item{bias_constraint}{constraint applied to the bias vector.}
}
\description{
\loadmathjax
A Crystal Graph Convolutional layer as presented by
\href{https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.120.145301}{Xie & Grossman (2018)}.

\strong{Mode}: single, disjoint.

\strong{This layer expects a sparse adjacency matrix.}

This layer computes for each node \mjeqn{i}{}:
\mjdeqn{ H_i = X_i + \sum\limits_{j \in \mathcal{N}(i)} \sigma \left( z_{ij} W^{(f)} + b^{(f)} \right) \odot g \left( z_{ij} W^{(s)} + b^{(s)} \right) }{}
where \mjeqn{z_{ij} = X_i \| X_j \| E_{ij} }{}, \mjeqn{\sigma}{} is a sigmoid
activation, and \mjeqn{g}{} is the activation function (defined by the \code{activation}
argument).

\strong{Input}
\itemize{
\item Node features of shape \verb{(N, F)};
\item Binary adjacency matrix of shape \verb{(N, N)}.
\item Edge features of shape \verb{(num_edges, S)}.
}

\strong{Output}
\itemize{
\item Node features with the same shape of the input, but the last dimension
changed to \code{channels}.
}
}
